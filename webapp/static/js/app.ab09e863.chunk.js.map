{"version":3,"sources":["assets/app-logo.png","src/screens/auth/authSlice.tsx","src/app/services/baseQuery.ts","src/helpers.ts","src/app/services/api.ts","src/components/Info.tsx","src/style/theme.ts","src/components/TextInput.tsx","src/components/Button.tsx","src/components/FormField.tsx","src/screens/auth/Login.tsx","src/screens/home/Calculator.tsx","src/screens/home/Home.tsx","src/screens/Main.tsx","src/app/store.ts","App.tsx"],"names":["module","exports","slice","createSlice","name","initialState","user","access_token","refresh_token","reducers","setCredentials","state","action","payload","actions","baseQuery","fetchBaseQuery","baseUrl","Constants","manifest","extra","headers","prepareHeaders","token","getState","auth","set","baseQueryWithReauth","args","api","extraOptions","a","async","result","error","status","refreshResult","data","dispatch","jwtDecode","convertStringToDouble","val","Number","parseFloat","replace","createApi","reducerPath","endpoints","builder","login","mutation","query","credentials","url","method","body","transformResponse","onQueryStarted","queryFulfilled","console","log","calculate","operand1","operand2","operator","client_id","calculatorUrlPostfix","number1","number2","fetchSessions","sessionStart","sessionStop","sessionId","useLoginMutation","useCalculateMutation","useSessionStartMutation","useFetchSessionsMutation","useSessionStopMutation","Info","text","View","style","container","Text","StyleSheet","create","padding","borderWidth","borderColor","borderRadius","width","marginTop","marginBottom","color","fontSize","theme","primary","white","grey","lightGrey","red","lightRed","TextInput","label","rest","errorStyle","defaultStyle","containerStyle","labelStyle","inputStyle","errorLabelStyle","height","paddingLeft","Button","onClick","disabled","buttonStyle","styles","button","push","TouchableOpacity","onPress","alignItems","justifyContent","textTransform","backgroundColor","FormField","children","Login","navigation","useState","username","password","formState","setFormState","Image","source","AppLogo","isError","message","placeholder","value","onChangeText","secureTextEntry","unwrap","navigate","isLoading","flex","Platform","select","web","default","loginButton","CalculatorButton","buttonText","Calculator","loading","setState","useEffect","s","handlePress","operand","test","current","concat","screen","screenText","resultText","toString","buttonGroup","row","maxWidth","display","flexDirection","margin","fontWeight","textAlign","Home","isCalculateLaoding","startSession","sessionStartError","isSessionStartError","isSessionStartLoading","isSessionStartSuccess","isSuccess","OS","Stack","createNativeStackNavigator","Main","Navigator","initialRouteName","screenOptions","header","Screen","component","store","configureStore","reducer","authReducer","middleware","getDefaultMiddleware","App","NavigationContainer"],"mappings":"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","file":"static/js/app.ab09e863.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo.3be78e48.png\";","import { createSlice } from \"@reduxjs/toolkit\";\nimport type { User } from \"../../app/services/api\";\nimport type { RootState } from \"../../app/store\";\n\ntype AuthState = {\n  user: User | null;\n  access_token: string | null;\n  refresh_token: string | null;\n};\n\nconst slice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    access_token: null,\n    refresh_token: null,\n  } as AuthState,\n  reducers: {\n    setCredentials: (state, action) => {\n      state.user = action.payload.user;\n      state.access_token = action.payload.access_token;\n      state.refresh_token = action.payload.refresh_token;\n    },\n  },\n});\n\nexport const { setCredentials } = slice.actions;\n\nexport default slice.reducer;\n\nexport const getAuthData = (state: RootState) => state.auth;\n","import {\n  fetchBaseQuery,\n  FetchArgs,\n  FetchBaseQueryError,\n  BaseQueryFn,\n} from \"@reduxjs/toolkit/query/react\";\n\nimport Constants from \"expo-constants\";\nimport { setCredentials } from \"../../screens/auth/authSlice\";\nimport jwtDecode from \"jwt-decode\";\n\nconst baseQuery = fetchBaseQuery({\n  baseUrl: Constants.manifest?.extra?.baseUrl,\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n  prepareHeaders: (headers, { getState }) => {\n    // By default, if we have a token in the store, let's use that for authenticated requests\n    const token = (getState() as RootState).auth.access_token;\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  },\n});\n\nconst baseQueryWithReauth: BaseQueryFn<\n  string | FetchArgs,\n  unknown,\n  FetchBaseQueryError\n> = async (args, api, extraOptions) => {\n  let result = await baseQuery(args, api, extraOptions);\n\n  if (result.error && result.error.status === 401) {\n    // try to get a new token\n    const refreshResult = await baseQuery(\"/refresh-token\", api, extraOptions);\n    if (refreshResult.data) {\n      // store the new token\n      const { access_token, refresh_token } = refreshResult.data;\n\n      api.dispatch(\n        setCredentials({\n          user: jwtDecode(access_token),\n          access_token,\n          refresh_token,\n        }),\n      );\n      // retry the initial query\n      result = await baseQuery(args, api, extraOptions);\n    } else {\n      api.dispatch(setCredentials());\n    }\n  }\n  return result;\n};\n\nexport default baseQueryWithReauth;\n","export const convertStringToDouble = (val: string): number =>\n  Number.parseFloat(val.replace(/,/g, \".\"));\n","import { createApi } from \"@reduxjs/toolkit/query/react\";\n\nimport jwtDecode from \"jwt-decode\";\nimport { setCredentials } from \"../../screens/auth/authSlice\";\nimport baseQueryWithReauth from \"./baseQuery\";\nimport { convertStringToDouble } from \"../../helpers\";\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  iss: string;\n  role: string[];\n}\n\nexport interface LoginResponse {\n  access_token: string;\n  refresh_token: string;\n  user_id: string;\n}\n\nexport interface LoginRequest {\n  username: string;\n  password: string;\n}\n\nexport const api = createApi({\n  reducerPath: \"api\",\n  baseQuery: baseQueryWithReauth,\n  endpoints: (builder) => ({\n    login: builder.mutation<LoginResponse, LoginRequest>({\n      query: (credentials) => ({\n        url: \"api/v1/login\",\n        method: \"POST\",\n        body: credentials,\n      }),\n      transformResponse: ({ access_token, refresh_token }) => ({\n        user: jwtDecode(access_token),\n        access_token,\n        refresh_token,\n      }),\n      // set user data when logged in\n      async onQueryStarted(args, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n          dispatch(setCredentials(data));\n        } catch (error) {\n          console.log(error);\n        }\n      },\n    }),\n    calculate: builder.mutation<any, any>({\n      query: ({ operand1, operand2, operator, client_id }) => {\n        let calculatorUrlPostfix = \"\";\n        switch (operator) {\n          case \"+\":\n            calculatorUrlPostfix = \"add\";\n            break;\n          case \"-\":\n            calculatorUrlPostfix = \"subtract\";\n            break;\n          case \"*\":\n            calculatorUrlPostfix = \"multiply\";\n            break;\n          case \"/\":\n            calculatorUrlPostfix = \"divide\";\n            break;\n        }\n        return {\n          url: `api/v1/calculators/${calculatorUrlPostfix}`,\n          method: \"POST\",\n          body: {\n            number1: convertStringToDouble(operand1),\n            number2: convertStringToDouble(operand2),\n            client_id,\n          },\n        };\n      },\n    }),\n    fetchSessions: builder.mutation<any, any>({\n      query: () => ({\n        url: \"api/v1/sessions\",\n        method: \"POST\",\n        body: \"\",\n      }),\n    }),\n    sessionStart: builder.mutation<any, any>({\n      query: () => ({\n        url: \"api/v1/sessions/start\",\n        method: \"POST\",\n      }),\n    }),\n    sessionStop: builder.mutation<any, any>({\n      query: ({ sessionId }) => ({\n        url: `api/v1/sessions/${sessionId}/end`,\n        method: \"POST\",\n        body: \"\",\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useLoginMutation,\n  useCalculateMutation,\n  useFetchSessionsMutation,\n  useSessionStartMutation,\n  useSessionStopMutation,\n} = api;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\ninterface Props {\n  text: string;\n}\n\nexport const Info: React.FunctionComponent<Props> = ({ text }) => (\n  <View style={style.container}>\n    <Text style={style.text}>{text}</Text>\n  </View>\n);\n\nconst style = StyleSheet.create({\n  container: {\n    padding: 8,\n    borderWidth: 1,\n    borderColor: \"red\",\n    borderRadius: 4,\n    width: \"100%\",\n    marginTop: 8,\n    marginBottom: 16,\n  },\n  text: {\n    color: \"red\",\n    fontSize: 14,\n  },\n});\n","export const theme = {\n  color: {\n    primary: \"#32CE57\",\n    white: \"#ffffff\",\n    grey: \"#d9d9d9\",\n    lightGrey: \"#f5f5f7\",\n    red: \"#FF0056\",\n    lightRed: \"#E10958\",\n  },\n};\n","import {\n  View,\n  TextInput as RNInput,\n  Text,\n  StyleSheet,\n  TextInputProps,\n} from \"react-native\";\nimport { theme } from \"../style/theme\";\n\ninterface Props extends TextInputProps {\n  label?: string;\n  error?: string;\n}\n\nexport const TextInput: React.FC<Props> = ({ label, error, ...rest }) => {\n  const style = error ? errorStyle : defaultStyle;\n  return (\n    <View style={style.containerStyle}>\n      {label && <Text style={style.labelStyle}>{label}</Text>}\n      <RNInput style={style.inputStyle} {...rest} />\n      {error && <Text style={style.errorLabelStyle}>{error}</Text>}\n    </View>\n  );\n};\n\nconst defaultStyle = StyleSheet.create({\n  containerStyle: {\n    width: \"100%\",\n  },\n  inputStyle: {\n    height: 48,\n    paddingLeft: 16,\n    borderWidth: 1,\n    borderColor: theme.color.grey,\n    borderRadius: 4,\n  },\n  labelStyle: {\n    fontSize: 12,\n    marginBottom: 4,\n  },\n  errorLabelStyle: {\n    fontSize: 12,\n    color: theme.color.red,\n    marginTop: 4,\n  },\n});\n\nconst errorStyle = StyleSheet.create({\n  containerStyle: {\n    width: \"100%\",\n  },\n  inputStyle: {\n    height: 48,\n    paddingLeft: 16,\n    borderWidth: 1,\n    borderColor: theme.color.red,\n    borderRadius: 4,\n  },\n  labelStyle: {\n    fontSize: 12,\n    marginBottom: 4,\n  },\n  errorLabelStyle: {\n    fontSize: 12,\n    color: theme.color.red,\n    marginTop: 4,\n  },\n});\n","import { StyleSheet, TouchableOpacity, Text } from \"react-native\";\nimport { theme } from \"../style/theme\";\n\ninterface Props {\n  text: string;\n  onClick: () => void;\n  disabled?: boolean;\n}\n\nexport const Button: React.FC<Props> = ({ text, onClick, disabled, style }) => {\n  const buttonStyle = [styles.button];\n\n  if (style) {\n    buttonStyle.push(style);\n  }\n  return (\n    <TouchableOpacity style={buttonStyle} onPress={onClick} disabled={disabled}>\n      <Text style={styles.text}>{text}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 48,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n    width: \"100%\",\n    backgroundColor: theme.color.primary,\n    borderRadius: 4,\n  },\n  text: {\n    fontSize: 14,\n    color: theme.color.white,\n  },\n});\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\n\ninterface Props {\n  space?: string;\n}\n\nexport const FormField: React.FunctionComponent<Props> = ({ children }) => (\n  <View style={style.container}>{children}</View>\n);\n\nconst style = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginBottom: 16,\n  },\n});\n","import { View, StyleSheet, Image, Platform } from \"react-native\";\nimport { useState } from \"react\";\nimport AppLogo from \"../../../assets/app-logo.png\";\nimport { useLoginMutation } from \"../../app/services/api\";\nimport { Info } from \"../../components/Info\";\nimport { TextInput } from \"../../components/TextInput\";\nimport { Button } from \"../../components/Button\";\nimport { FormField } from \"../../components/FormField\";\nimport { useDispatch } from \"react-redux\";\n\ninterface LoginFormState {\n  username: string;\n  password: string;\n}\n\nexport const Login = ({ navigation }) => {\n  const [formState, setFormState] = useState<LoginFormState>({\n    username: \"\",\n    password: \"\",\n  });\n  const [login, data] = useLoginMutation();\n\n  const setUsername = (value: string) => {\n    setFormState((state) => ({ ...state, username: value }));\n  };\n\n  const setPassword = (value: string) => {\n    setFormState((state) => ({ ...state, password: value }));\n  };\n\n  const handleLogin = async () => {\n    await login({\n      username: formState.username,\n      password: formState.password,\n    }).unwrap();\n\n    navigation.navigate(\"home\");\n  };\n\n  return (\n    <View style={style.container}>\n      <Image\n        source={AppLogo}\n        style={{ width: 200, height: 60, marginBottom: 48 }}\n      />\n      {data.isError && <Info text={data.error?.data?.message} />}\n\n      <FormField>\n        <TextInput\n          placeholder=\"Username\"\n          label=\"Enter username*\"\n          value={formState.username}\n          onChangeText={setUsername}\n          secureTextEntry={false}\n        />\n      </FormField>\n      <FormField>\n        <TextInput\n          placeholder=\"Password\"\n          label=\"Enter password*\"\n          secureTextEntry={true}\n          value={formState.password}\n          onChangeText={setPassword}\n        />\n      </FormField>\n      <FormField>\n        <Button text=\"Login\" onClick={handleLogin} disabled={data.isLoading} />\n      </FormField>\n    </View>\n  );\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 24,\n    ...Platform.select({\n      web: {\n        width: 400,\n      },\n      default: \"100%\",\n    }),\n  },\n  loginButton: {\n    width: \"100%\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, TouchableOpacity } from \"react-native\";\n\nimport { theme } from \"../../style/theme\";\n\ninterface CalculatorButtonProps {\n  text: string;\n  onClick: (text: string) => void;\n  style?: any;\n  disabled?: boolean;\n}\n\nconst CalculatorButton: React.FC<CalculatorButtonProps> = ({\n  text,\n  onClick,\n  disabled,\n}) => {\n  const handleClick = () => {\n    onClick(text);\n  };\n  return (\n    <TouchableOpacity\n      style={styles.button}\n      onPress={handleClick}\n      disabled={disabled}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  );\n};\n\ninterface CalculatorProps {\n  calculate: (operand1: string, operand2: string, operator: string) => void;\n  loading: boolean;\n  result: string;\n}\n\nexport const Calculator: React.FC<CalculatorProps> = ({\n  calculate,\n  loading,\n  result,\n}) => {\n  const [state, setState] = useState({\n    operand1: \"\",\n    operand2: \"\",\n    operator: \"\",\n    result: result ?? \"\",\n  });\n\n  useEffect(() => {\n    setState((s) => ({ ...s, result }));\n  }, [result]);\n\n  const handlePress = (value: string) => {\n    const operand = !state.operator ? \"operand1\" : \"operand2\";\n\n    if (value === \"AC\") {\n      setState({\n        operand1: \"\",\n        operand2: \"\",\n        operator: \"\",\n        result: \"\",\n      });\n    } else if (/[\\d,]/g.test(value)) {\n      if (/,/g.test(value) && /,/g.test(state[operand])) {\n        return;\n      }\n\n      setState((current) =>\n        current.result\n          ? {\n              operand1: value,\n              operand2: \"\",\n              operator: \"\",\n              result: \"\",\n            }\n          : {\n              ...current,\n              [operand]: state[operand].concat(value),\n            },\n      );\n    } else if (/[/x\\-*+]/.test(value)) {\n      if (!state.operand1) {\n        return;\n      }\n\n      setState((current) => ({\n        ...current,\n        operator: value,\n      }));\n    } else if (value === \"=\") {\n      if (!loading) {\n        calculate(state.operand1, state.operand2, state.operator);\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.screen}>\n        <Text style={styles.screenText}>\n          {state.operand1} {state.operator} {state.operand2}\n          {state.result ? (\n            <Text style={styles.resultText}>\n              = {state.result.toString().replace(/\\./g, \",\")}\n            </Text>\n          ) : null}\n        </Text>\n      </View>\n      <View style={styles.buttonGroup}>\n        <View style={styles.row}>\n          <CalculatorButton text=\"AC\" onClick={handlePress} />\n          <CalculatorButton text=\"\" onClick={handlePress} disabled={true} />\n          <CalculatorButton text=\"\" onClick={handlePress} disabled={true} />\n          <CalculatorButton text=\"/\" onClick={handlePress} />\n        </View>\n        <View style={styles.row}>\n          <CalculatorButton text=\"7\" onClick={handlePress} />\n          <CalculatorButton text=\"8\" onClick={handlePress} />\n          <CalculatorButton text=\"9\" onClick={handlePress} />\n          <CalculatorButton text=\"*\" onClick={handlePress} />\n        </View>\n        <View style={styles.row}>\n          <CalculatorButton text=\"4\" onClick={handlePress} />\n          <CalculatorButton text=\"5\" onClick={handlePress} />\n          <CalculatorButton text=\"6\" onClick={handlePress} />\n          <CalculatorButton text=\"-\" onClick={handlePress} />\n        </View>\n        <View style={styles.row}>\n          <CalculatorButton text=\"1\" onClick={handlePress} />\n          <CalculatorButton text=\"2\" onClick={handlePress} />\n          <CalculatorButton text=\"3\" onClick={handlePress} />\n          <CalculatorButton text=\"+\" onClick={handlePress} />\n        </View>\n        <View style={styles.row}>\n          <CalculatorButton text=\"0\" onClick={handlePress} />\n          <CalculatorButton text=\"\" onClick={handlePress} disabled={true} />\n          <CalculatorButton text=\",\" onClick={handlePress} />\n          <CalculatorButton text=\"=\" onClick={handlePress} disabled={loading} />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginTop: 24,\n    maxWidth: 500,\n    height: 330,\n  },\n  row: {\n    display: \"flex\",\n    flex: 4,\n    height: 48,\n    width: \"100%\",\n    flexDirection: \"row\",\n  },\n  buttonGroup: {\n    width: \"100%\",\n    height: 5 * 48 + 24,\n  },\n  button: {\n    flex: 1,\n    margin: 4,\n    height: 48,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n    width: \"100%\",\n    backgroundColor: theme.color.primary,\n    borderRadius: 4,\n  },\n  buttonText: {\n    color: \"#ffffff\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n  screen: {\n    padding: 8,\n    justifyContent: \"center\",\n    backgroundColor: \"#dbdbdb\",\n    marginBottom: 16,\n    height: 80,\n  },\n  screenText: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    textAlign: \"right\",\n  },\n  resultText: {\n    fontWeight: \"bold\",\n    fontSize: 28,\n    textAlign: \"right\",\n  },\n});\n","import { View, Text, StyleSheet, Platform } from \"react-native\";\nimport {\n  useCalculateMutation,\n  useSessionStartMutation,\n} from \"../../app/services/api\";\nimport { Calculator } from \"./Calculator\";\nimport { useEffect } from \"react\";\nimport { Info } from \"../../components/Info\";\n\nexport const Home = () => {\n  const [calculate, { isLoading: isCalculateLaoding, data }] =\n    useCalculateMutation();\n\n  const [\n    startSession,\n    {\n      error: sessionStartError,\n      isError: isSessionStartError,\n      isLoading: isSessionStartLoading,\n      isSuccess: isSessionStartSuccess,\n    },\n  ] = useSessionStartMutation();\n\n  useEffect(() => {\n    startSession();\n  }, [startSession]);\n\n  const handleCalculate = async (\n    operand1: string,\n    operand2: string,\n    operator: string,\n  ) => {\n    await calculate({\n      operand1,\n      operand2,\n      operator,\n      client_id: Platform.OS,\n    });\n  };\n\n  if (isSessionStartLoading) {\n    return <Text>Getting sessions ...</Text>;\n  }\n\n  return (\n    <View style={style.container}>\n      {isSessionStartError && <Info text={sessionStartError?.data?.message} />}\n      {isSessionStartSuccess && (\n        <Calculator\n          calculate={handleCalculate}\n          loading={isCalculateLaoding}\n          result={data?.result}\n        />\n      )}\n    </View>\n  );\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    alignItems: \"center\",\n    padding: 24,\n    marginTop: 48,\n  },\n});\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport { Login } from \"../screens/auth/Login\";\nimport { Home } from \"./home/Home\";\n\nconst Stack = createNativeStackNavigator();\n\nexport const Main = () => (\n  <Stack.Navigator\n    initialRouteName=\"login\"\n    screenOptions={{ header: () => null }}\n  >\n    <Stack.Screen name=\"login\" component={Login} />\n    <Stack.Screen name=\"home\" component={Home} />\n  </Stack.Navigator>\n);\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { api } from \"./services/api\";\nimport authReducer from \"../screens/auth/authSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    [api.reducerPath]: api.reducer,\n    auth: authReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(api.middleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Main } from \"./src/screens/Main\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./src/app/store\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Main />\n      </NavigationContainer>\n    </Provider>\n  );\n}\n"],"sourceRoot":""}